1ва задача

SELECT e.employee_id, e.job_title, e.address_id, a.address_text FROM employees AS e
JOIN addresses AS a
ON e.address_id = a.address_id
ORDER BY e.address_id
LIMIT 5;

2ра задача

SELECT e.first_name, e.last_name, t.`name`, a.address_text FROM employees AS e
JOIN addresses AS a 
JOIN towns AS t
ON e.address_id = a.address_id AND a.town_id = t.town_id
ORDER BY first_name, last_name
LIMIT 5;

3та задача

SELECT e.employee_id, e.first_name, e.last_name, d.`name` FROM employees AS e
JOIN departments AS d 
ON e.department_id = d.department_id
WHERE d.`name` = 'Sales'
ORDER BY e.employee_id DESC;

4та задача

SELECT e.employee_id, e.first_name, e.salary, d.`name` FROM employees AS e
JOIN departments AS d 
ON e.department_id = d.department_id
WHERE e.salary > 15000
ORDER BY d.department_id DESC
LIMIT 5;

5та задача

SELECT e.employee_id, e.first_name FROM employees AS e
LEFT JOIN employees_projects AS p 
ON p.employee_id = e.employee_id
WHERE p.employee_id IS NULL
ORDER BY e.employee_id DESC
LIMIT 3;

6та задача

SELECT e.first_name, e.last_name, e.hire_date, d.`name` AS dept_name FROM employees AS e
JOIN departments AS d 
ON e.department_id = d.department_id
WHERE DATE(e.hire_date) > '1999/1/1' AND d.`name` IN ('Sales', 'Finance')
ORDER BY e.hire_date;

7ма задача

SELECT e.employee_id, e.first_name, p.name FROM employees AS e
JOIN employees_projects AS ep 
ON e.employee_id = ep.employee_id
JOIN projects AS p
ON p.project_id = ep.project_id
WHERE DATE(p.start_date) > '2002-08-13' AND p.end_date IS NULL
ORDER BY e.first_name, p.name
LIMIT 5;

8ма задача

SELECT e.employee_id, e.first_name, IF(YEAR(p.start_date) >= 2005, NULL, p.name) FROM employees AS e
JOIN employees_projects AS ep 
ON e.employee_id = ep.employee_id
JOIN projects AS p
ON p.project_id = ep.project_id
WHERE e.employee_id = 24 
ORDER BY p.name;

9та задача

SELECT e.employee_id, e.first_name, e.manager_id, (SELECT m.first_name FROM employees AS m
WHERE m.employee_id = e.manager_id) AS manager_name FROM employees AS e
WHERE manager_id IN(3,7)
ORDER BY e.first_name;

10та задача

SELECT e.employee_id, CONCAT(e.first_name, ' ', e.last_name) AS employee_name, (SELECT CONCAT(m.first_name, ' ', m.last_name) FROM employees AS m
WHERE m.employee_id = e.manager_id) AS manager_name, d.name FROM employees AS e
JOIN departments AS d
ON e.department_id = d.department_id
WHERE e.manager_id IS NOT NULL
ORDER BY e.employee_id
LIMIT 5;

11та задача

SELECT AVG(e.salary) AS min_average_salary FROM employees AS e
GROUP BY e.department_id
ORDER BY min_average_salary
LIMIT 1;

12 задача

SELECT mc.country_code, m.mountain_range, p.peak_name, p.elevation FROM mountains AS m
JOIN mountains_countries AS mc
ON m.id = mc.mountain_id
JOIN peaks AS p
ON m.id = p.mountain_id
WHERE p.elevation > 2835 AND mc.country_code = 'BG'
ORDER BY p.elevation DESC;

13та задача

SELECT mc.country_code, COUNT(m.mountain_range) AS count FROM mountains AS m
JOIN mountains_countries AS mc
ON m.id = mc.mountain_id
WHERE mc.country_code IN ('BG', 'US', 'RU')
GROUP BY mc.country_code
ORDER BY count DESC;

14та задача

SELECT c.country_name, r.river_name FROM countries AS c
LEFT JOIN countries_rivers AS cr
ON c.country_code = cr.country_code
LEFT JOIN rivers AS r
ON r.id = cr.river_id
WHERE c.continent_code = 'AF'
ORDER BY c.country_name
LIMIT 5;

15та задача

16та задача

SELECT (COUNT(*) - COUNT(mc.mountain_id)) AS country_count FROM countries AS c
LEFT JOIN mountains_countries AS mc
ON c.country_code = mc.country_code;

17 задача

SELECT c.country_name, MAX(p.elevation) AS highest_peak_elevation, MAX(r.length) AS longest_river_length FROM countries AS c
LEFT JOIN mountains_countries AS mc
ON c.country_code = mc.country_code
LEFT JOIN peaks AS p
ON mc.mountain_id = p.mountain_id
LEFT JOIN countries_rivers AS cr
ON c.country_code = cr.country_code
LEFT JOIN rivers AS r
ON r.id = cr.river_id
GROUP BY c.country_code
ORDER BY highest_peak_elevation DESC, longest_river_length DESC, c.country_name
LIMIT 5;
