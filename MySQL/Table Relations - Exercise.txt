1ва задача

CREATE TABLE `passports` (
  `passport_id` INT NOT NULL AUTO_INCREMENT,
  `passport_number` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`passport_id`),
  UNIQUE INDEX `passport_id_UNIQUE` (`passport_id` ASC) VISIBLE);




CREATE TABLE `people` (
  `person_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NOT NULL,
  `salary` DECIMAL(9,2) NULL,
  `passport_id` INT NOT NULL UNIQUE,
  PRIMARY KEY (`person_id`),
  INDEX `fk_persons_passports_idx` (`passport_id` ASC) VISIBLE,
  CONSTRAINT `fk_persons_passports`
    FOREIGN KEY (`passport_id`)
    REFERENCES `passports` (`passport_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

INSERT INTO `passports` (`passport_id`, `passport_number`) VALUES ('101', 'N34FG21B');
INSERT INTO `passports` (`passport_id`, `passport_number`) VALUES ('102', 'K65LO4R7');
INSERT INTO `passports` (`passport_id`, `passport_number`) VALUES ('103', 'ZE657QP2');
    
INSERT INTO `people` (`person_id`, `first_name`, `salary`, `passport_id`) VALUES ('1', 'Roberto', '43300.00', '102');
INSERT INTO `people` (`person_id`, `first_name`, `salary`, `passport_id`) VALUES ('2', 'Tom', '56100.00', '103');
INSERT INTO `people` (`person_id`, `first_name`, `salary`, `passport_id`) VALUES ('3', 'Yana', '60200.00', '101');

2ра задача

CREATE TABLE manufacturers(
manufacturer_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45),
established_on DATE);

CREATE TABLE models(
model_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45),
manufacturer_id INT NOT NULL,
CONSTRAINT fk_models_manufacturers
FOREIGN KEY (manufacturer_id)
REFERENCES manufacturers(manufacturer_id))
AUTO_INCREMENT = 101;

INSERT INTO `manufacturers` (`name`, `established_on`) 
VALUES 
('BMW', '1916-03-01'),
('Tesla', '2003-01-01'),
('Lada', '1966-05-01');

INSERT INTO `models` (`name`, `manufacturer_id`) 
VALUES 
('X1', 1),
('i6', 1),
('Model S', 2),
('Model X', 2),
('Model 3', 2),
('Nova', 3);

3та задача

CREATE TABLE students(
student_id INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45) NOT NULL,
CONSTRAINT pk_students PRIMARY KEY(student_id));

CREATE TABLE exams(
exam_id INT NOT NULL AUTO_INCREMENT,
`name` VARCHAR(45) NOT NULL,
CONSTRAINT pk_exams PRIMARY KEY(exam_id))
AUTO_INCREMENT = 101;


CREATE TABLE students_exams(
student_id INT NOT NULL,
exam_id INT NOT NULL,
CONSTRAINT pk_students_exams PRIMARY KEY(student_id, exam_id),
CONSTRAINT fk_student_exams_students
FOREIGN KEY (student_id)
REFERENCES students(student_id),
CONSTRAINT fk_student_exams_exams
FOREIGN KEY (exam_id)
REFERENCES exams(exam_id));

INSERT INTO students (`name`)
VALUES
('Mila'),
('Toni'),
('Ron');

INSERT INTO exams (`name`)
VALUES
('Spring MVC'),
('Neo4j'),
('Oracle 11g');

INSERT INTO students_exams
VALUES
(1,101),
(1,102),
(2,101),
(3,103),
(2,102),
(2,103);

4та задача

CREATE TABLE teachers(
teacher_id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50),
manager_id INT)
AUTO_INCREMENT = 101;

INSERT INTO teachers (`name`, manager_id)
VALUES
('John', NULL),
('Maya', 106),
('Silvia', 106),
('Ted', 105),
('Mark', 101),
('Greta', 101);

ALTER TABLE teachers
ADD CONSTRAINT fk_
FOREIGN KEY (manager_id)
REFERENCES teachers(teacher_id);

5та задача

CREATE TABLE item_types(
item_type_id INT(11) PRIMARY KEY,
`name` VARCHAR(50));

CREATE TABLE cities(
city_id INT(11) PRIMARY KEY,
`name` VARCHAR(50));

CREATE TABLE customers(
customer_id INT(11) PRIMARY KEY,
`name` VARCHAR(50),
birthday DATE,
city_id INT(11),
CONSTRAINT fk_customers_cities
FOREIGN KEY (city_id)
REFERENCES cities(city_id));

CREATE TABLE orders(
order_id INT(11) PRIMARY KEY,
customer_id INT(11),
CONSTRAINT fk_orders_customers
FOREIGN KEY (customer_id)
REFERENCES customers(customer_id));

CREATE TABLE items(
item_id INT(11) PRIMARY KEY,
`name` VARCHAR(50),
item_type_id INT(11),
CONSTRAINT fk_items_item_types
FOREIGN KEY (item_type_id)
REFERENCES item_types(item_type_id));

CREATE TABLE order_items(
order_id INT(11),
item_id INT(11),
PRIMARY KEY (order_id, item_id),
CONSTRAINT fk_order_items_orders
FOREIGN KEY (order_id)
REFERENCES orders(order_id),
CONSTRAINT fk_order_items_items
FOREIGN KEY (item_id)
REFERENCES items(item_id));

6та задача

CREATE TABLE majors(
major_id INT(11) PRIMARY KEY,
`name` VARCHAR(50));

CREATE TABLE subjects(
subject_id INT(11) PRIMARY KEY,
subject_name VARCHAR(50));

CREATE TABLE students(
student_id INT(11) PRIMARY KEY,
student_number VARCHAR(12),
student_name VARCHAR(50),
major_id INT(11),
CONSTRAINT fk_students_majors
FOREIGN KEY (major_id)
REFERENCES majors(major_id));

CREATE TABLE payments(
payment_id INT(11) PRIMARY KEY,
payment_date DATE,
payment_amount DECIMAL(8,2),
student_id INT(11),
CONSTRAINT fk_payments_students
FOREIGN KEY (student_id)
REFERENCES students(student_id));

CREATE TABLE agenda(
student_id INT(11),
subject_id INT(11),
PRIMARY KEY (student_id, subject_id),
CONSTRAINT fk_agenda_students
FOREIGN KEY (student_id)
REFERENCES students(student_id),
CONSTRAINT fk_agenda_subjects
FOREIGN KEY (subject_id)
REFERENCES subjects(subject_id));

9та задача

SELECT mountain_range, peaks.peak_name, peaks.elevation FROM mountains 
JOIN peaks
ON mountains.id = 17 AND peaks.mountain_id = 17
ORDER BY elevation DESC;